@charset "UTF-8";
* {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
  text-decoration: none;
<<<<<<< HEAD
  font-family: 'Open Sans', sans-serif;
  color: white; }
  body *:hover, body *:active, body *:focus {
    text-decoration: none;
    outline: none;
    color: white; }
=======
  font-family: 'Open Sans', sans-serif; }
>>>>>>> 96de8b1edb46f3a781378d9522f0395acffbc187

/*przycisk wysuwajacy navbar nie jest czescia navbaru w strukturze html - do dopisania w glownym szkielecie strony plus obsluga w JS(mozliwe ze da sie bez JS)*/
.nav-bar ul li a::before, .nav-bar ul li a::after {
  content: '';
  display: block;
  width: 100%;
  height: 2px;
  background: white;
  position: absolute;
  left: 0;
  -webkit-transform: scaleX(0);
          transform: scaleX(0); }

.nav-bar {
  display: block;
  height: 105px;
  width: 100%;
  background: #13b3bb;
  font-size: 14px;
  position: fixed;
  z-index: 2;
  top: -50%;
  transition: all 0.5s cubic-bezier(0.175, 0.885, 0.32, 1.1); }
  .nav-bar.nav-bar-shown {
    top: 0; }
  @media (max-width: 768px) {
    .nav-bar {
      height: auto;
      transition: all 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275); } }
  .nav-bar ul {
    list-style-type: none;
    height: 100%;
    max-width: 730px;
    margin: 0 auto;
    display: -webkit-box;
    display: flex;
    justify-content: space-around;
    -webkit-box-align: center;
            align-items: center;
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
            flex-flow: row wrap; }
    @media (max-width: 1100px) {
      .nav-bar ul {
        max-width: 650px; } }
    @media (max-width: 940px) {
      .nav-bar ul {
        max-width: 560px; } }
    @media (max-width: 768px) {
      .nav-bar ul {
        width: calc(70% - 50px);
        padding-top: 2.2em;
        padding-bottom: 2.2em; } }
    .nav-bar ul li:not(:nth-child(1)) {
      margin-left: 35px; }
      @media (max-width: 1100px) {
        .nav-bar ul li:not(:nth-child(1)) {
          margin-left: 0; } }
    @media (max-width: 768px) {
      .nav-bar ul li {
        width: 100%;
        margin: 0 !important;
        padding: 5px 0; } }
    .nav-bar ul li a {
      color: #333333;
      font-size: 14px;
      font-weight: 600;
      text-transform: uppercase;
      letter-spacing: 2px;
      padding: 0.5em;
      text-align: center;
      transition: color .5s;
      position: relative;
      /*klasa z aktywna strona w navbarze - obsluga do dopisania w JS*/ }
      @media (max-width: 768px) {
        .nav-bar ul li a {
          display: block;
          font-size: 14px; } }
      .nav-bar ul li a::before {
        top: 0; }
      .nav-bar ul li a::after {
        bottom: 0; }
      .nav-bar ul li a.active-nav-link {
        color: white;
        text-decoration: none; }
        .nav-bar ul li a.active-nav-link::before, .nav-bar ul li a.active-nav-link::after {
          -webkit-transform: scaleX(1);
                  transform: scaleX(1); }
      .nav-bar ul li a:focus {
        text-decoration: none;
        color: #333333; }
      .nav-bar ul li a:hover {
        color: white;
        text-decoration: none; }
        .nav-bar ul li a:hover::before, .nav-bar ul li a:hover::after {
          -webkit-transform: scaleX(1);
                  transform: scaleX(1);
          -webkit-transform-origin: 0 50%;
                  transform-origin: 0 50%;
          transition: -webkit-transform 0.4s;
          transition: transform 0.4s;
          transition: transform 0.4s, -webkit-transform 0.4s; }
        .nav-bar ul li a:hover::after {
          -webkit-transform-origin: 100% 50%;
                  transform-origin: 100% 50%; }

button.nav-bar-button {
  background: rgba(0, 0, 0, 0.4);
  width: 50px;
  height: 40px;
  border: none;
  position: fixed;
  right: 15%;
  top: 4%;
  z-index: 3; }
<<<<<<< HEAD
=======
  button.nav-bar-button:hover, button.nav-bar-button:active, button.nav-bar-button:focus, button.nav-bar-button:visited {
    text-decoration: none;
    outline: none;
    color: white; }
>>>>>>> 96de8b1edb46f3a781378d9522f0395acffbc187
  @media (max-width: 1300px) {
    button.nav-bar-button {
      right: 10%; } }
  @media (max-width: 800px) {
    button.nav-bar-button {
      right: 10%; } }
  button.nav-bar-button .button-div-line {
    height: 2px;
    width: 35px;
    background: #fff;
    margin: 5px auto;
    transition: opacity 0.3s, background 0.3s, -webkit-transform 0.3s;
    transition: transform 0.3s, opacity 0.3s, background 0.3s;
    transition: transform 0.3s, opacity 0.3s, background 0.3s, -webkit-transform 0.3s; }
  button.nav-bar-button.active-nav-bar-button .button-div-line {
    position: absolute;
    margin: 0;
    top: 19px;
    left: 6.5px;
    background: #333; }
    button.nav-bar-button.active-nav-bar-button .button-div-line:nth-of-type(1) {
      -webkit-transform: rotate(45deg);
              transform: rotate(45deg); }
    button.nav-bar-button.active-nav-bar-button .button-div-line:nth-of-type(2) {
      -webkit-transform: rotate(-45deg);
              transform: rotate(-45deg); }
    button.nav-bar-button.active-nav-bar-button .button-div-line:nth-of-type(3) {
      bottom: 12px;
      left: 7.5px;
      opacity: 0; }

.adorning-logo h2 {
  font-family: 'Ubuntu', sans-serif;
  position: relative;
  font-size: 40px;
  font-weight: 300;
  line-height: 1;
  padding: 0 .67em;
  transition: font-size 0.5s;
  /*najpierw media ponizej 600px, wszystko w logo jest na jednostkach em wiec wystarczy zmieniac font-size u glownego rodzica */
  /*media powyzej 768px*/ }
  @media (max-width: 600px) {
    .adorning-logo h2 {
      font-size: 36px; } }
  @media (max-width: 480px) {
    .adorning-logo h2 {
      font-size: 32px; } }
  @media (max-width: 380px) {
    .adorning-logo h2 {
      font-size: 28px; } }
  @media (min-width: 768px) {
    .adorning-logo h2 {
      font-size: 47px; } }
  @media (min-width: 1200px) {
    .adorning-logo h2 {
      font-size: 54px; } }
  .adorning-logo h2::before {
    content: "";
    width: .55em;
    height: 1em;
    border: 3px solid #24f4ff;
    position: absolute;
    top: 0.15em;
    left: 0; }
    @media (min-width: 768px) {
      .adorning-logo h2::before {
        border: 5px solid #24f4ff; } }
  .adorning-logo h2 a {
<<<<<<< HEAD
    font-family: 'Ubuntu', sans-serif; }
=======
    font-family: 'Ubuntu', sans-serif;
    text-decoration: none;
    color: white; }
    .adorning-logo h2 a:hover, .adorning-logo h2 a:active, .adorning-logo h2 a:focus, .adorning-logo h2 a:visited {
      text-decoration: none;
      outline: none;
      color: white; }
>>>>>>> 96de8b1edb46f3a781378d9522f0395acffbc187
  .adorning-logo h2 span {
    font-family: 'Ubuntu', sans-serif;
    display: block;
    font-size: .3em;
    line-height: 0.1;
    color: #24f4ff;
    /*zeby span nie nachodzil na a przy najmniejszych wymiarach*/ }
    @media (max-width: 480px) {
      .adorning-logo h2 span {
        line-height: 0.3; } }
    @media (min-width: 768px) {
      .adorning-logo h2 span {
        line-height: 0.2; } }

section.banner {
  background: url("../images/banner.jpg") no-repeat top center;
  background-size: cover;
  position: relative;
  /*min-height dla bannera pozwala skalowac sie t≈Çu*/ }
  @media (max-width: 500px) {
    section.banner {
      min-height: 400px; } }
  @media (min-width: 300px) {
    section.banner {
      min-height: 250px; } }
  @media (min-width: 400px) {
    section.banner {
      min-height: 333.33333px; } }
  @media (min-width: 500px) {
    section.banner {
      min-height: 416.66667px; } }
  @media (min-width: 600px) {
    section.banner {
      min-height: 500px; } }
  @media (min-width: 700px) {
    section.banner {
      min-height: 466.66667px; } }
  @media (min-width: 800px) {
    section.banner {
      min-height: 533.33333px; } }
  @media (min-width: 900px) {
    section.banner {
      min-height: 600px; } }
  @media (min-width: 1000px) {
    section.banner {
      min-height: 666.66667px; } }
  @media (min-width: 1100px) {
    section.banner {
      min-height: 733.33333px; } }
  @media (min-width: 1200px) {
    section.banner {
      min-height: 770px; } }
  section.banner .container {
    width: 100%;
    max-width: 1200px;
    margin: 0 auto;
    padding-top: 18px; }
    section.banner .container header {
      display: -webkit-box;
      display: flex;
      -webkit-box-pack: justify;
              justify-content: space-between;
      -webkit-box-align: center;
              align-items: center; }
  @media (min-width: 768px) {
    section.banner .banner-list-container {
      -webkit-transform: rotate(-90deg);
              transform: rotate(-90deg); } }
  section.banner .banner-list {
    list-style-type: none;
    display: -webkit-box;
    display: flex;
    -webkit-box-pack: center;
            justify-content: center;
    -webkit-box-align: center;
            align-items: center;
<<<<<<< HEAD
    margin-top: 12.5%; }
=======
    margin-top: 12.5%;
    color: white; }
>>>>>>> 96de8b1edb46f3a781378d9522f0395acffbc187
    @media (max-width: 630px) {
      section.banner .banner-list {
        margin-top: 20%; } }
    @media (max-width: 290px) {
      section.banner .banner-list {
        -webkit-box-orient: vertical;
        -webkit-box-direction: normal;
                flex-direction: column; } }
    @media (min-width: 768px) {
      section.banner .banner-list {
        margin-top: -25%;
        justify-content: space-around;
        position: absolute;
        right: 110%;
        width: 200%; } }
  @media (min-width: 768px) and (max-width: 990px) {
    section.banner .banner-list {
      width: 230%;
      right: 90%; } }
  @media (min-width: 768px) and (max-width: 865px) {
    section.banner .banner-list {
      width: 260%;
      right: 70%; } }
    section.banner .banner-list li {
      margin: 0 3%;
      letter-spacing: 2px;
      font-size: 13px;
      font-weight: 600; }
      @media (max-width: 430px) {
        section.banner .banner-list li {
          font-size: 10px; } }
      @media (min-width: 768px) {
        section.banner .banner-list li {
          font-size: 14px; } }
  section.banner .banner-info {
    text-align: center;
    color: white; }
    @media (min-width: 768px) {
      section.banner .banner-info {
        margin-top: 31.5%; } }
    section.banner .banner-info h1 {
      font-size: 7.7vw;
      line-height: 1.1; }
      @media (max-width: 430px) {
        section.banner .banner-info h1 {
          font-size: 33px; } }
      @media (min-width: 710px) {
        section.banner .banner-info h1 {
          font-size: 55px; } }
      @media (min-width: 880px) {
        section.banner .banner-info h1 {
          font-size: 64px; } }
      @media (min-width: 1200px) {
        section.banner .banner-info h1 {
          font-size: 73px; } }
      section.banner .banner-info h1 strong {
        display: block;
        text-transform: uppercase;
        font-family: 'Ubuntu', sans-serif;
        font-weight: 600; }
      section.banner .banner-info h1 p {
        font-family: 'Ubuntu', sans-serif;
        font-size: .33em;
        font-style: italic;
        font-weight: 300;
        letter-spacing: 2px; }
        @media (min-width: 600px) {
          section.banner .banner-info h1 p {
            font-size: 15px; } }
        @media (min-width: 700px) {
          section.banner .banner-info h1 p {
            font-size: 15.5px; } }
        @media (min-width: 800px) {
          section.banner .banner-info h1 p {
            font-size: 16.5px; } }
        @media (min-width: 900px) {
          section.banner .banner-info h1 p {
            font-size: 18px; } }
        @media (min-width: 1000px) {
          section.banner .banner-info h1 p {
            font-size: 19px; } }
        @media (min-width: 1100px) {
          section.banner .banner-info h1 p {
            font-size: 20px; } }
    section.banner .banner-info > p {
      width: 90%;
      margin: 2.8em auto;
      font-size: 14px;
      line-height: 1.8em; }
      @media (max-width: 625px) {
        section.banner .banner-info > p {
          margin: 1.5em auto;
          font-size: 13px;
          width: 85%; } }
      @media (max-width: 550px) {
        section.banner .banner-info > p {
          font-size: 12px;
          width: 90%; } }
      @media (max-width: 485px) {
        section.banner .banner-info > p {
          width: 95%; } }
    section.banner .banner-info > a {
      display: inline-block;
<<<<<<< HEAD
=======
      color: white;
      text-decoration: none;
>>>>>>> 96de8b1edb46f3a781378d9522f0395acffbc187
      margin: 2vw auto 60px auto;
      text-transform: uppercase;
      font-size: 14px;
      font-weight: 600;
      letter-spacing: 2px;
      padding: 10px 40px;
      background: #24f4ff;
      border: 2px solid #fff;
      position: relative;
      overflow: hidden; }
<<<<<<< HEAD
=======
      section.banner .banner-info > a:hover, section.banner .banner-info > a:active, section.banner .banner-info > a:focus, section.banner .banner-info > a:visited {
        text-decoration: none;
        outline: none;
        color: white; }
>>>>>>> 96de8b1edb46f3a781378d9522f0395acffbc187
      section.banner .banner-info > a span {
        position: relative;
        transition: color 0.5s; }
      section.banner .banner-info > a::before {
        content: '';
        display: block;
        position: absolute;
        left: calc(50% - 200px);
        top: calc(50% - 50px);
        border-radius: 50%;
        width: 400px;
        height: 100px;
        background: #494848;
        transition: -webkit-transform 0.5s;
        transition: transform 0.5s;
        transition: transform 0.5s, -webkit-transform 0.5s; }
      section.banner .banner-info > a:hover span {
        color: #333; }
      section.banner .banner-info > a:hover::before {
        background: #494848;
        -webkit-transform: scale(0.001);
                transform: scale(0.001); }
      @media (max-width: 470px) {
        section.banner .banner-info > a {
          font-size: 10px;
          padding: 8px 35px; } }

.newsletter {
  background-color: #13b3bb;
  min-height: 150px;
  display: -webkit-box;
  display: flex;
  -webkit-box-align: center;
          align-items: center;
  -webkit-box-pack: center;
          justify-content: center; }
  .newsletter h3 {
    color: #FFFFFF;
    font-size: 2.5em; }
    @media (max-width: 640px) {
      .newsletter h3 {
        text-align: center; } }
  .newsletter input {
    border: 1px solid #FFFFFF;
    background-color: #13b3bb;
    height: 3em; }
  .newsletter button {
    text-transform: uppercase;
    color: #FFFFFF;
    background-color: #000000;
    text-align: center;
    border: none;
    padding: 0.5em 1em;
    height: 3em; }

footer {
  background-color: #0f0f0f;
  min-height: 300px; }
  footer .adorning-logo h2 {
    font-family: 'Ubuntu', sans-serif;
    position: relative;
    font-size: 20px;
    font-weight: 300;
    line-height: 1;
    padding: 0 .67em;
    transition: font-size 0.5s;
    /*najpierw media ponizej 600px, wszystko w logo jest na jednostkach em wiec wystarczy zmieniac font-size u glownego rodzica */
    /*media powyzej 768px*/ }
    @media (max-width: 600px) {
      footer .adorning-logo h2 {
        font-size: 36px; } }
    @media (max-width: 480px) {
      footer .adorning-logo h2 {
        font-size: 32px; } }
    @media (max-width: 380px) {
      footer .adorning-logo h2 {
        font-size: 28px; } }
    @media (min-width: 768px) {
      footer .adorning-logo h2 {
        font-size: 47px; } }
    @media (min-width: 1200px) {
      footer .adorning-logo h2 {
        font-size: 54px; } }
    footer .adorning-logo h2::before {
      content: "";
      width: .55em;
      height: 1em;
      border: 3px solid #24f4ff;
      position: absolute;
      top: 0.15em;
      left: 0; }
      @media (min-width: 768px) {
        footer .adorning-logo h2::before {
          border: 5px solid #24f4ff; } }
    footer .adorning-logo h2 a {
      font-family: 'Ubuntu', sans-serif; }
    footer .adorning-logo h2 span {
      font-family: 'Ubuntu', sans-serif;
      display: block;
      font-size: .3em;
      line-height: 0.1;
      color: #24f4ff;
      /*zeby span nie nachodzil na a przy najmniejszych wymiarach*/ }
      @media (max-width: 480px) {
        footer .adorning-logo h2 span {
          line-height: 0.3; } }
      @media (min-width: 768px) {
        footer .adorning-logo h2 span {
          line-height: 0.2; } }
  footer .footer div:nth-of-type(2) {
    color: #FFFFFF; }
    footer .footer div:nth-of-type(2) span {
      font-size: 3em; }
  footer .footer div:nth-of-type(3) ul {
    list-style: none; }
    footer .footer div:nth-of-type(3) ul li a {
      color: #FFFFFF;
      text-transform: uppercase; }
  footer .footer .footer_boxes {
    border: 1px solid red;
    display: -webkit-box;
    display: flex;
    flex-wrap: wrap;
    width: 25%; }
    @media (max-width: 480px) {
      footer .footer .footer_boxes {
        width: 100%; } }
    @media (max-width: 991px) {
      footer .footer .footer_boxes {
        width: 50%; } }
    @media (max-width: 1024px) {
      footer .footer .footer_boxes {
        width: 25%; } }
    footer .footer .footer_boxes div {
      width: 50%; }
      footer .footer .footer_boxes div img {
        max-width: 100%;
        height: auto; }

.events {
  background-color: #FFFFFF;
  border: 1px dotted green;
  min-height: 300px; }
  .events h3 {
    color: #000; }
  .events p {
    color: #000; }
  .events .container {
    border: 1px solid blue; }
    .events .container .event_table {
      border: 1px solid red; }
      .events .container .event_table div {
        border: 1px dotted deeppink; }
  .events .event_box {
    background-image: url("../images/8.jpg");
    min-height: 400px;
    position: relative;
    padding: 3em; }
    .events .event_box > div {
      background: rgba(9, 243, 255, 0.45);
      height: 305px;
      padding: 2em;
      text-align: center; }
      .events .event_box > div h2 {
        text-transform: capitalize;
        color: #FFFFFF;
        border-bottom: 1px solid #FFFFFF;
        font-size: 2em; }
      .events .event_box > div h3 {
        color: #FFFFFF;
        letter-spacing: 30px;
        text-transform: uppercase;
        font-size: 4em;
        margin-top: .5em; }

.tmp-section {
  min-height: 300px; }
  .tmp-section:nth-of-type(2n) {
    background-color: #999999; }

<<<<<<< HEAD
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uY3NzIiwicGFydGlhbHMvX3Jlc2V0LnNjc3MiLCJwYXJ0aWFscy9fbmF2YmFyLnNjc3MiLCJtb2R1bGVzL192YXJpYWJsZXMuc2NzcyIsInBhcnRpYWxzL19uYXYtYmFyLWJ1dHRvbi5zY3NzIiwicGFydGlhbHMvX2Fkb3JuaW5nX2xvZ28uc2NzcyIsInBhcnRpYWxzL19iYW5uZXItc2VjdGlvbi5zY3NzIiwicGFydGlhbHMvX2Zvb3Rlci5zY3NzIiwicGFydGlhbHMvX2V2ZW50cy1zZWN0aW9uLnNjc3MiLCJtYWluLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsaUJBQWlCO0FDQWpCO0VBR0ksV0FBVztFQUNYLFVBQVU7RUFDVix1QkFBdUI7RUFDdkIsc0JBQXNCO0VBQ3RCLHFDQUFxQztFQUNyQyxhQUFhLEVBT2Q7RUFmSDtJQVdNLHNCQUFzQjtJQUN0QixjQUFjO0lBQ2QsYUFBYSxFQUNkOztBQ2RMLGdLQUFnSztBQUVoSztFQUNFLFlBQVk7RUFDWixlQUFlO0VBQ2YsWUFBWTtFQUNaLFlBQVk7RUFDWixrQkFBa0I7RUFDbEIsbUJBQW1CO0VBQ25CLFFBQVE7RUFDUiw2QkFBaUI7VUFBakIscUJBQWlCLEVBQ2xCOztBQUVEO0VBQ0UsZUFBZTtFQUNmLGNBQWM7RUFDZCxZQUFZO0VBQ1osb0JDakJxQjtFRGtCckIsZ0JBQWdCO0VBQ2hCLGdCQUFnQjtFQUNoQixXQUFXO0VBQ1gsVUFBUztFQUNULDJEQUFpQyxFQWdIbEM7RUF6SEQ7SUFlSSxPQUFNLEVBQ1A7RUFFRDtJQWxCRjtNQW1CSSxhQUFhO01BQ2IsNkRBQWlDLEVBcUdwQyxFQUFBO0VBekhEO0lBd0JJLHNCQUFzQjtJQUN0QixhQUFhO0lBQ2IsaUJBQWlCO0lBQ2pCLGVBQWU7SUFDZixxQkFBYztJQUFkLGNBQWM7SUFDZCw4QkFBOEI7SUFDOUIsMEJBQW9CO1lBQXBCLG9CQUFvQjtJQUNwQiwrQkFBb0I7SUFBcEIsOEJBQW9CO1lBQXBCLG9CQUFvQixFQXlGckI7SUF2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WjtJQXBCQztNQXRHUjtRQXVHVSxZQUFZLEVBbUJmLEVBQUE7SUFoQkM7TUExR1I7UUEyR1UsV0FBVyxFQWVkLEVBQUE7SUFaQztNQTlHUjtRQStHVSxXQUFXLEVBV2QsRUFBQTtJQTFIUDtNQW1IVSxXQUFXLEVBTVo7TUF6SFQ7UUFxSFksZ0JBQWdCO1FBQ2hCLGFBQWEsRUFDZDs7QUMzSlg7RUFTRSwwQkFBMEI7RUFDMUIseUJBQXdCO0VBQ3hCLGtCQUFpQixFQW9DbEI7RUEvQ0Q7SUFFSSxZQUFZLEVBQ2I7RUFISDtJQU1JLFlBQVksRUFDYjtFQVBIO0lBYUksdUJBQXNCLEVBT3ZCO0lBcEJIO01BZU0sc0JBQXFCLEVBSXRCO01BbkJMO1FBaUJNLDRCQUE0QixFQUM3QjtFQWxCTDtJQXNCSSx5Q0FBcUI7SUFDckIsa0JBQWtCO0lBQ2xCLG1CQUFtQjtJQUNuQixhQUFZLEVBcUJiO0lBOUNIO01BMkJNLG9DQUFnQjtNQUNoQixjQUFhO01BQ2IsYUFBWTtNQUNaLG1CQUFtQixFQWVwQjtNQTdDTDtRQWdDUSwyQkFBMkI7UUFDM0IsZUFBZTtRQUNmLGlDQUFpQztRQUNqQyxlQUFlLEVBQ2hCO01BcENQO1FBc0NRLGVBQWU7UUFDZixxQkFBcUI7UUFDckIsMEJBQTBCO1FBQzFCLGVBQWU7UUFDZixpQkFBaUIsRUFDbEI7O0FDbENQO0VBQ0Usa0JBQWtCLEVBSW5CO0VBTEQ7SUFHSSwwQkFBMEIsRUFDM0IiLCJmaWxlIjoibWFpbi5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAY2hhcnNldCBcIlVURi04XCI7XG5ib2R5ICoge1xuICBwYWRkaW5nOiAwO1xuICBtYXJnaW46IDA7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgZm9udC1mYW1pbHk6ICdPcGVuIFNhbnMnLCBzYW5zLXNlcmlmO1xuICBjb2xvcjogd2hpdGU7IH1cbiAgYm9keSAqOmhvdmVyLCBib2R5ICo6YWN0aXZlLCBib2R5ICo6Zm9jdXMge1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICBvdXRsaW5lOiBub25lO1xuICAgIGNvbG9yOiB3aGl0ZTsgfVxuXG4vKnByenljaXNrIHd5c3V3YWphY3kgbmF2YmFyIG5pZSBqZXN0IGN6ZXNjaWEgbmF2YmFydSB3IHN0cnVrdHVyemUgaHRtbCAtIGRvIGRvcGlzYW5pYSB3IGdsb3dueW0gc3praWVsZWNpZSBzdHJvbnkgcGx1cyBvYnNsdWdhIHcgSlMobW96bGl3ZSB6ZSBkYSBzaWUgYmV6IEpTKSovXG4ubmF2LWJhciB1bCBsaSBhOjpiZWZvcmUsIC5uYXYtYmFyIHVsIGxpIGE6OmFmdGVyIHtcbiAgY29udGVudDogJyc7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAycHg7XG4gIGJhY2tncm91bmQ6IHdoaXRlO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IDA7XG4gIHRyYW5zZm9ybTogc2NhbGVYKDApOyB9XG5cbi5uYXYtYmFyIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGhlaWdodDogMTA1cHg7XG4gIHdpZHRoOiAxMDAlO1xuICBiYWNrZ3JvdW5kOiAjMTNiM2JiO1xuICBmb250LXNpemU6IDE0cHg7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgei1pbmRleDogMjtcbiAgdG9wOiAtNTAlO1xuICB0cmFuc2l0aW9uOiBhbGwgMC41cyBjdWJpYy1iZXppZXIoMC4xNzUsIDAuODg1LCAwLjMyLCAxLjEpOyB9XG4gIC5uYXYtYmFyLm5hdi1iYXItc2hvd24ge1xuICAgIHRvcDogMDsgfVxuICBAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAubmF2LWJhciB7XG4gICAgICBoZWlnaHQ6IGF1dG87XG4gICAgICB0cmFuc2l0aW9uOiBhbGwgMC4zcyBjdWJpYy1iZXppZXIoMC4xNzUsIDAuODg1LCAwLjMyLCAxLjI3NSk7IH0gfVxuICAubmF2LWJhciB1bCB7XG4gICAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xuICAgIGhlaWdodDogMTAwJTtcbiAgICBtYXgtd2lkdGg6IDczMHB4O1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBmbGV4LWZsb3c6IHJvdyB3cmFwOyB9XG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDExMDBweCkge1xuICAgICAgLm5hdi1iYXIgdWwge1xuICAgICAgICBtYXgtd2lkdGg6IDY1MHB4OyB9IH1cbiAgICBAbWVkaWEgKG1heC13aWR0aDogOTQwcHgpIHtcbiAgICAgIC5uYXYtYmFyIHVsIHtcbiAgICAgICAgbWF4LXdpZHRoOiA1NjBweDsgfSB9XG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgICAubmF2LWJhciB1bCB7XG4gICAgICAgIHdpZHRoOiBjYWxjKDcwJSAtIDUwcHgpO1xuICAgICAgICBwYWRkaW5nLXRvcDogMi4yZW07XG4gICAgICAgIHBhZGRpbmctYm90dG9tOiAyLjJlbTsgfSB9XG4gICAgLm5hdi1iYXIgdWwgbGk6bm90KDpudGgtY2hpbGQoMSkpIHtcbiAgICAgIG1hcmdpbi1sZWZ0OiAzNXB4OyB9XG4gICAgICBAbWVkaWEgKG1heC13aWR0aDogMTEwMHB4KSB7XG4gICAgICAgIC5uYXYtYmFyIHVsIGxpOm5vdCg6bnRoLWNoaWxkKDEpKSB7XG4gICAgICAgICAgbWFyZ2luLWxlZnQ6IDA7IH0gfVxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgICAgLm5hdi1iYXIgdWwgbGkge1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgbWFyZ2luOiAwICFpbXBvcnRhbnQ7XG4gICAgICAgIHBhZGRpbmc6IDVweCAwOyB9IH1cbiAgICAubmF2LWJhciB1bCBsaSBhIHtcbiAgICAgIGNvbG9yOiAjMzMzMzMzO1xuICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgICAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgICBsZXR0ZXItc3BhY2luZzogMnB4O1xuICAgICAgcGFkZGluZzogMC41ZW07XG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICB0cmFuc2l0aW9uOiBjb2xvciAuNXM7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAvKmtsYXNhIHogYWt0eXduYSBzdHJvbmEgdyBuYXZiYXJ6ZSAtIG9ic2x1Z2EgZG8gZG9waXNhbmlhIHcgSlMqLyB9XG4gICAgICBAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAgICAgLm5hdi1iYXIgdWwgbGkgYSB7XG4gICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgZm9udC1zaXplOiAxNHB4OyB9IH1cbiAgICAgIC5uYXYtYmFyIHVsIGxpIGE6OmJlZm9yZSB7XG4gICAgICAgIHRvcDogMDsgfVxuICAgICAgLm5hdi1iYXIgdWwgbGkgYTo6YWZ0ZXIge1xuICAgICAgICBib3R0b206IDA7IH1cbiAgICAgIC5uYXYtYmFyIHVsIGxpIGEuYWN0aXZlLW5hdi1saW5rIHtcbiAgICAgICAgY29sb3I6IHdoaXRlO1xuICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7IH1cbiAgICAgICAgLm5hdi1iYXIgdWwgbGkgYS5hY3RpdmUtbmF2LWxpbms6OmJlZm9yZSwgLm5hdi1iYXIgdWwgbGkgYS5hY3RpdmUtbmF2LWxpbms6OmFmdGVyIHtcbiAgICAgICAgICB0cmFuc2Zvcm06IHNjYWxlWCgxKTsgfVxuICAgICAgLm5hdi1iYXIgdWwgbGkgYTpmb2N1cyB7XG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAgICAgY29sb3I6ICMzMzMzMzM7IH1cbiAgICAgIC5uYXYtYmFyIHVsIGxpIGE6aG92ZXIge1xuICAgICAgICBjb2xvcjogd2hpdGU7XG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTsgfVxuICAgICAgICAubmF2LWJhciB1bCBsaSBhOmhvdmVyOjpiZWZvcmUsIC5uYXYtYmFyIHVsIGxpIGE6aG92ZXI6OmFmdGVyIHtcbiAgICAgICAgICB0cmFuc2Zvcm06IHNjYWxlWCgxKTtcbiAgICAgICAgICB0cmFuc2Zvcm0tb3JpZ2luOiAwIDUwJTtcbiAgICAgICAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC40czsgfVxuICAgICAgICAubmF2LWJhciB1bCBsaSBhOmhvdmVyOjphZnRlciB7XG4gICAgICAgICAgdHJhbnNmb3JtLW9yaWdpbjogMTAwJSA1MCU7IH1cblxuYnV0dG9uLm5hdi1iYXItYnV0dG9uIHtcbiAgYmFja2dyb3VuZDogcmdiYSgwLCAwLCAwLCAwLjQpO1xuICB3aWR0aDogNTBweDtcbiAgaGVpZ2h0OiA0MHB4O1xuICBib3JkZXI6IG5vbmU7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgcmlnaHQ6IDE1JTtcbiAgdG9wOiA0JTtcbiAgei1pbmRleDogMzsgfVxuICBAbWVkaWEgKG1heC13aWR0aDogMTMwMHB4KSB7XG4gICAgYnV0dG9uLm5hdi1iYXItYnV0dG9uIHtcbiAgICAgIHJpZ2h0OiAxMCU7IH0gfVxuICBAbWVkaWEgKG1heC13aWR0aDogODAwcHgpIHtcbiAgICBidXR0b24ubmF2LWJhci1idXR0b24ge1xuICAgICAgcmlnaHQ6IDEwJTsgfSB9XG4gIGJ1dHRvbi5uYXYtYmFyLWJ1dHRvbiAuYnV0dG9uLWRpdi1saW5lIHtcbiAgICBoZWlnaHQ6IDJweDtcbiAgICB3aWR0aDogMzVweDtcbiAgICBiYWNrZ3JvdW5kOiAjZmZmO1xuICAgIG1hcmdpbjogNXB4IGF1dG87XG4gICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuM3MsIG9wYWNpdHkgMC4zcywgYmFja2dyb3VuZCAwLjNzOyB9XG4gIGJ1dHRvbi5uYXYtYmFyLWJ1dHRvbi5hY3RpdmUtbmF2LWJhci1idXR0b24gLmJ1dHRvbi1kaXYtbGluZSB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIG1hcmdpbjogMDtcbiAgICB0b3A6IDE5cHg7XG4gICAgbGVmdDogNi41cHg7XG4gICAgYmFja2dyb3VuZDogIzMzMzsgfVxuICAgIGJ1dHRvbi5uYXYtYmFyLWJ1dHRvbi5hY3RpdmUtbmF2LWJhci1idXR0b24gLmJ1dHRvbi1kaXYtbGluZTpudGgtb2YtdHlwZSgxKSB7XG4gICAgICB0cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZyk7IH1cbiAgICBidXR0b24ubmF2LWJhci1idXR0b24uYWN0aXZlLW5hdi1iYXItYnV0dG9uIC5idXR0b24tZGl2LWxpbmU6bnRoLW9mLXR5cGUoMikge1xuICAgICAgdHJhbnNmb3JtOiByb3RhdGUoLTQ1ZGVnKTsgfVxuICAgIGJ1dHRvbi5uYXYtYmFyLWJ1dHRvbi5hY3RpdmUtbmF2LWJhci1idXR0b24gLmJ1dHRvbi1kaXYtbGluZTpudGgtb2YtdHlwZSgzKSB7XG4gICAgICBib3R0b206IDEycHg7XG4gICAgICBsZWZ0OiA3LjVweDtcbiAgICAgIG9wYWNpdHk6IDA7IH1cblxuLmFkb3JuaW5nLWxvZ28gaDIge1xuICBmb250LWZhbWlseTogJ1VidW50dScsIHNhbnMtc2VyaWY7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZm9udC1zaXplOiA0MHB4O1xuICBmb250LXdlaWdodDogMzAwO1xuICBsaW5lLWhlaWdodDogMTtcbiAgcGFkZGluZzogMCAuNjdlbTtcbiAgdHJhbnNpdGlvbjogZm9udC1zaXplIDAuNXM7XG4gIC8qbmFqcGllcncgbWVkaWEgcG9uaXplaiA2MDBweCwgd3N6eXN0a28gdyBsb2dvIGplc3QgbmEgamVkbm9zdGthY2ggZW0gd2llYyB3eXN0YXJjenkgem1pZW5pYWMgZm9udC1zaXplIHUgZ2xvd25lZ28gcm9kemljYSAqL1xuICAvKm1lZGlhIHBvd3l6ZWogNzY4cHgqLyB9XG4gIEBtZWRpYSAobWF4LXdpZHRoOiA2MDBweCkge1xuICAgIC5hZG9ybmluZy1sb2dvIGgyIHtcbiAgICAgIGZvbnQtc2l6ZTogMzZweDsgfSB9XG4gIEBtZWRpYSAobWF4LXdpZHRoOiA0ODBweCkge1xuICAgIC5hZG9ybmluZy1sb2dvIGgyIHtcbiAgICAgIGZvbnQtc2l6ZTogMzJweDsgfSB9XG4gIEBtZWRpYSAobWF4LXdpZHRoOiAzODBweCkge1xuICAgIC5hZG9ybmluZy1sb2dvIGgyIHtcbiAgICAgIGZvbnQtc2l6ZTogMjhweDsgfSB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAgIC5hZG9ybmluZy1sb2dvIGgyIHtcbiAgICAgIGZvbnQtc2l6ZTogNDdweDsgfSB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiAxMjAwcHgpIHtcbiAgICAuYWRvcm5pbmctbG9nbyBoMiB7XG4gICAgICBmb250LXNpemU6IDU0cHg7IH0gfVxuICAuYWRvcm5pbmctbG9nbyBoMjo6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlwiO1xuICAgIHdpZHRoOiAuNTVlbTtcbiAgICBoZWlnaHQ6IDFlbTtcbiAgICBib3JkZXI6IDNweCBzb2xpZCAjMjRmNGZmO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDAuMTVlbTtcbiAgICBsZWZ0OiAwOyB9XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gICAgICAuYWRvcm5pbmctbG9nbyBoMjo6YmVmb3JlIHtcbiAgICAgICAgYm9yZGVyOiA1cHggc29saWQgIzI0ZjRmZjsgfSB9XG4gIC5hZG9ybmluZy1sb2dvIGgyIGEge1xuICAgIGZvbnQtZmFtaWx5OiAnVWJ1bnR1Jywgc2Fucy1zZXJpZjsgfVxuICAuYWRvcm5pbmctbG9nbyBoMiBzcGFuIHtcbiAgICBmb250LWZhbWlseTogJ1VidW50dScsIHNhbnMtc2VyaWY7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgZm9udC1zaXplOiAuM2VtO1xuICAgIGxpbmUtaGVpZ2h0OiAwLjE7XG4gICAgY29sb3I6ICMyNGY0ZmY7XG4gICAgLyp6ZWJ5IHNwYW4gbmllIG5hY2hvZHppbCBuYSBhIHByenkgbmFqbW5pZWpzenljaCB3eW1pYXJhY2gqLyB9XG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDQ4MHB4KSB7XG4gICAgICAuYWRvcm5pbmctbG9nbyBoMiBzcGFuIHtcbiAgICAgICAgbGluZS1oZWlnaHQ6IDAuMzsgfSB9XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gICAgICAuYWRvcm5pbmctbG9nbyBoMiBzcGFuIHtcbiAgICAgICAgbGluZS1oZWlnaHQ6IDAuMjsgfSB9XG5cbnNlY3Rpb24uYmFubmVyIHtcbiAgYmFja2dyb3VuZDogdXJsKFwiLi4vaW1hZ2VzL2Jhbm5lci5qcGdcIikgbm8tcmVwZWF0IHRvcCBjZW50ZXI7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgLyptaW4taGVpZ2h0IGRsYSBiYW5uZXJhIHBvendhbGEgc2thbG93YWMgc2llIHTFgnUqLyB9XG4gIEBtZWRpYSAobWF4LXdpZHRoOiA1MDBweCkge1xuICAgIHNlY3Rpb24uYmFubmVyIHtcbiAgICAgIG1pbi1oZWlnaHQ6IDQwMHB4OyB9IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDMwMHB4KSB7XG4gICAgc2VjdGlvbi5iYW5uZXIge1xuICAgICAgbWluLWhlaWdodDogMjUwcHg7IH0gfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNDAwcHgpIHtcbiAgICBzZWN0aW9uLmJhbm5lciB7XG4gICAgICBtaW4taGVpZ2h0OiAzMzMuMzMzMzNweDsgfSB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA1MDBweCkge1xuICAgIHNlY3Rpb24uYmFubmVyIHtcbiAgICAgIG1pbi1oZWlnaHQ6IDQxNi42NjY2N3B4OyB9IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDYwMHB4KSB7XG4gICAgc2VjdGlvbi5iYW5uZXIge1xuICAgICAgbWluLWhlaWdodDogNTAwcHg7IH0gfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNzAwcHgpIHtcbiAgICBzZWN0aW9uLmJhbm5lciB7XG4gICAgICBtaW4taGVpZ2h0OiA0NjYuNjY2NjdweDsgfSB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA4MDBweCkge1xuICAgIHNlY3Rpb24uYmFubmVyIHtcbiAgICAgIG1pbi1oZWlnaHQ6IDUzMy4zMzMzM3B4OyB9IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDkwMHB4KSB7XG4gICAgc2VjdGlvbi5iYW5uZXIge1xuICAgICAgbWluLWhlaWdodDogNjAwcHg7IH0gfVxuICBAbWVkaWEgKG1pbi13aWR0aDogMTAwMHB4KSB7XG4gICAgc2VjdGlvbi5iYW5uZXIge1xuICAgICAgbWluLWhlaWdodDogNjY2LjY2NjY3cHg7IH0gfVxuICBAbWVkaWEgKG1pbi13aWR0aDogMTEwMHB4KSB7XG4gICAgc2VjdGlvbi5iYW5uZXIge1xuICAgICAgbWluLWhlaWdodDogNzMzLjMzMzMzcHg7IH0gfVxuICBAbWVkaWEgKG1pbi13aWR0aDogMTIwMHB4KSB7XG4gICAgc2VjdGlvbi5iYW5uZXIge1xuICAgICAgbWluLWhlaWdodDogNzcwcHg7IH0gfVxuICBzZWN0aW9uLmJhbm5lciAuY29udGFpbmVyIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBtYXgtd2lkdGg6IDEyMDBweDtcbiAgICBtYXJnaW46IDAgYXV0bztcbiAgICBwYWRkaW5nLXRvcDogMThweDsgfVxuICAgIHNlY3Rpb24uYmFubmVyIC5jb250YWluZXIgaGVhZGVyIHtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgICBhbGlnbi1pdGVtczogY2VudGVyOyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAgIHNlY3Rpb24uYmFubmVyIC5iYW5uZXItbGlzdC1jb250YWluZXIge1xuICAgICAgdHJhbnNmb3JtOiByb3RhdGUoLTkwZGVnKTsgfSB9XG4gIHNlY3Rpb24uYmFubmVyIC5iYW5uZXItbGlzdCB7XG4gICAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBtYXJnaW4tdG9wOiAxMi41JTsgfVxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA2MzBweCkge1xuICAgICAgc2VjdGlvbi5iYW5uZXIgLmJhbm5lci1saXN0IHtcbiAgICAgICAgbWFyZ2luLXRvcDogMjAlOyB9IH1cbiAgICBAbWVkaWEgKG1heC13aWR0aDogMjkwcHgpIHtcbiAgICAgIHNlY3Rpb24uYmFubmVyIC5iYW5uZXItbGlzdCB7XG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47IH0gfVxuICAgIEBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAgICAgc2VjdGlvbi5iYW5uZXIgLmJhbm5lci1saXN0IHtcbiAgICAgICAgbWFyZ2luLXRvcDogLTI1JTtcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgcmlnaHQ6IDExMCU7XG4gICAgICAgIHdpZHRoOiAyMDAlOyB9IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSBhbmQgKG1heC13aWR0aDogOTkwcHgpIHtcbiAgICBzZWN0aW9uLmJhbm5lciAuYmFubmVyLWxpc3Qge1xuICAgICAgd2lkdGg6IDIzMCU7XG4gICAgICByaWdodDogOTAlOyB9IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSBhbmQgKG1heC13aWR0aDogODY1cHgpIHtcbiAgICBzZWN0aW9uLmJhbm5lciAuYmFubmVyLWxpc3Qge1xuICAgICAgd2lkdGg6IDI2MCU7XG4gICAgICByaWdodDogNzAlOyB9IH1cbiAgICBzZWN0aW9uLmJhbm5lciAuYmFubmVyLWxpc3QgbGkge1xuICAgICAgbWFyZ2luOiAwIDMlO1xuICAgICAgbGV0dGVyLXNwYWNpbmc6IDJweDtcbiAgICAgIGZvbnQtc2l6ZTogMTNweDtcbiAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7IH1cbiAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiA0MzBweCkge1xuICAgICAgICBzZWN0aW9uLmJhbm5lciAuYmFubmVyLWxpc3QgbGkge1xuICAgICAgICAgIGZvbnQtc2l6ZTogMTBweDsgfSB9XG4gICAgICBAbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgICAgICAgc2VjdGlvbi5iYW5uZXIgLmJhbm5lci1saXN0IGxpIHtcbiAgICAgICAgICBmb250LXNpemU6IDE0cHg7IH0gfVxuICBzZWN0aW9uLmJhbm5lciAuYmFubmVyLWluZm8ge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjsgfVxuICAgIEBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAgICAgc2VjdGlvbi5iYW5uZXIgLmJhbm5lci1pbmZvIHtcbiAgICAgICAgbWFyZ2luLXRvcDogMzEuNSU7IH0gfVxuICAgIHNlY3Rpb24uYmFubmVyIC5iYW5uZXItaW5mbyBoMSB7XG4gICAgICBmb250LXNpemU6IDcuN3Z3O1xuICAgICAgbGluZS1oZWlnaHQ6IDEuMTsgfVxuICAgICAgQG1lZGlhIChtYXgtd2lkdGg6IDQzMHB4KSB7XG4gICAgICAgIHNlY3Rpb24uYmFubmVyIC5iYW5uZXItaW5mbyBoMSB7XG4gICAgICAgICAgZm9udC1zaXplOiAzM3B4OyB9IH1cbiAgICAgIEBtZWRpYSAobWluLXdpZHRoOiA3MTBweCkge1xuICAgICAgICBzZWN0aW9uLmJhbm5lciAuYmFubmVyLWluZm8gaDEge1xuICAgICAgICAgIGZvbnQtc2l6ZTogNTVweDsgfSB9XG4gICAgICBAbWVkaWEgKG1pbi13aWR0aDogODgwcHgpIHtcbiAgICAgICAgc2VjdGlvbi5iYW5uZXIgLmJhbm5lci1pbmZvIGgxIHtcbiAgICAgICAgICBmb250LXNpemU6IDY0cHg7IH0gfVxuICAgICAgQG1lZGlhIChtaW4td2lkdGg6IDEyMDBweCkge1xuICAgICAgICBzZWN0aW9uLmJhbm5lciAuYmFubmVyLWluZm8gaDEge1xuICAgICAgICAgIGZvbnQtc2l6ZTogNzNweDsgfSB9XG4gICAgICBzZWN0aW9uLmJhbm5lciAuYmFubmVyLWluZm8gaDEgc3Ryb25nIHtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgICAgIGZvbnQtZmFtaWx5OiAnVWJ1bnR1Jywgc2Fucy1zZXJpZjtcbiAgICAgICAgZm9udC13ZWlnaHQ6IDYwMDsgfVxuICAgICAgc2VjdGlvbi5iYW5uZXIgLmJhbm5lci1pbmZvIGgxIHAge1xuICAgICAgICBmb250LWZhbWlseTogJ1VidW50dScsIHNhbnMtc2VyaWY7XG4gICAgICAgIGZvbnQtc2l6ZTogLjMzZW07XG4gICAgICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcbiAgICAgICAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgICAgICAgbGV0dGVyLXNwYWNpbmc6IDJweDsgfVxuICAgICAgICBAbWVkaWEgKG1pbi13aWR0aDogNjAwcHgpIHtcbiAgICAgICAgICBzZWN0aW9uLmJhbm5lciAuYmFubmVyLWluZm8gaDEgcCB7XG4gICAgICAgICAgICBmb250LXNpemU6IDE1cHg7IH0gfVxuICAgICAgICBAbWVkaWEgKG1pbi13aWR0aDogNzAwcHgpIHtcbiAgICAgICAgICBzZWN0aW9uLmJhbm5lciAuYmFubmVyLWluZm8gaDEgcCB7XG4gICAgICAgICAgICBmb250LXNpemU6IDE1LjVweDsgfSB9XG4gICAgICAgIEBtZWRpYSAobWluLXdpZHRoOiA4MDBweCkge1xuICAgICAgICAgIHNlY3Rpb24uYmFubmVyIC5iYW5uZXItaW5mbyBoMSBwIHtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMTYuNXB4OyB9IH1cbiAgICAgICAgQG1lZGlhIChtaW4td2lkdGg6IDkwMHB4KSB7XG4gICAgICAgICAgc2VjdGlvbi5iYW5uZXIgLmJhbm5lci1pbmZvIGgxIHAge1xuICAgICAgICAgICAgZm9udC1zaXplOiAxOHB4OyB9IH1cbiAgICAgICAgQG1lZGlhIChtaW4td2lkdGg6IDEwMDBweCkge1xuICAgICAgICAgIHNlY3Rpb24uYmFubmVyIC5iYW5uZXItaW5mbyBoMSBwIHtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMTlweDsgfSB9XG4gICAgICAgIEBtZWRpYSAobWluLXdpZHRoOiAxMTAwcHgpIHtcbiAgICAgICAgICBzZWN0aW9uLmJhbm5lciAuYmFubmVyLWluZm8gaDEgcCB7XG4gICAgICAgICAgICBmb250LXNpemU6IDIwcHg7IH0gfVxuICAgIHNlY3Rpb24uYmFubmVyIC5iYW5uZXItaW5mbyA+IHAge1xuICAgICAgd2lkdGg6IDkwJTtcbiAgICAgIG1hcmdpbjogMi44ZW0gYXV0bztcbiAgICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICAgIGxpbmUtaGVpZ2h0OiAxLjhlbTsgfVxuICAgICAgQG1lZGlhIChtYXgtd2lkdGg6IDYyNXB4KSB7XG4gICAgICAgIHNlY3Rpb24uYmFubmVyIC5iYW5uZXItaW5mbyA+IHAge1xuICAgICAgICAgIG1hcmdpbjogMS41ZW0gYXV0bztcbiAgICAgICAgICBmb250LXNpemU6IDEzcHg7XG4gICAgICAgICAgd2lkdGg6IDg1JTsgfSB9XG4gICAgICBAbWVkaWEgKG1heC13aWR0aDogNTUwcHgpIHtcbiAgICAgICAgc2VjdGlvbi5iYW5uZXIgLmJhbm5lci1pbmZvID4gcCB7XG4gICAgICAgICAgZm9udC1zaXplOiAxMnB4O1xuICAgICAgICAgIHdpZHRoOiA5MCU7IH0gfVxuICAgICAgQG1lZGlhIChtYXgtd2lkdGg6IDQ4NXB4KSB7XG4gICAgICAgIHNlY3Rpb24uYmFubmVyIC5iYW5uZXItaW5mbyA+IHAge1xuICAgICAgICAgIHdpZHRoOiA5NSU7IH0gfVxuICAgIHNlY3Rpb24uYmFubmVyIC5iYW5uZXItaW5mbyA+IGEge1xuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgbWFyZ2luOiAydncgYXV0byA2MHB4IGF1dG87XG4gICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgICAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgICAgIGxldHRlci1zcGFjaW5nOiAycHg7XG4gICAgICBwYWRkaW5nOiAxMHB4IDQwcHg7XG4gICAgICBiYWNrZ3JvdW5kOiAjMjRmNGZmO1xuICAgICAgYm9yZGVyOiAycHggc29saWQgI2ZmZjtcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgIG92ZXJmbG93OiBoaWRkZW47IH1cbiAgICAgIHNlY3Rpb24uYmFubmVyIC5iYW5uZXItaW5mbyA+IGEgc3BhbiB7XG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgdHJhbnNpdGlvbjogY29sb3IgMC41czsgfVxuICAgICAgc2VjdGlvbi5iYW5uZXIgLmJhbm5lci1pbmZvID4gYTo6YmVmb3JlIHtcbiAgICAgICAgY29udGVudDogJyc7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIGxlZnQ6IGNhbGMoNTAlIC0gMjAwcHgpO1xuICAgICAgICB0b3A6IGNhbGMoNTAlIC0gNTBweCk7XG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgICAgICAgd2lkdGg6IDQwMHB4O1xuICAgICAgICBoZWlnaHQ6IDEwMHB4O1xuICAgICAgICBiYWNrZ3JvdW5kOiAjNDk0ODQ4O1xuICAgICAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC41czsgfVxuICAgICAgc2VjdGlvbi5iYW5uZXIgLmJhbm5lci1pbmZvID4gYTpob3ZlciBzcGFuIHtcbiAgICAgICAgY29sb3I6ICMzMzM7IH1cbiAgICAgIHNlY3Rpb24uYmFubmVyIC5iYW5uZXItaW5mbyA+IGE6aG92ZXI6OmJlZm9yZSB7XG4gICAgICAgIGJhY2tncm91bmQ6ICM0OTQ4NDg7XG4gICAgICAgIHRyYW5zZm9ybTogc2NhbGUoMC4wMDEpOyB9XG4gICAgICBAbWVkaWEgKG1heC13aWR0aDogNDcwcHgpIHtcbiAgICAgICAgc2VjdGlvbi5iYW5uZXIgLmJhbm5lci1pbmZvID4gYSB7XG4gICAgICAgICAgZm9udC1zaXplOiAxMHB4O1xuICAgICAgICAgIHBhZGRpbmc6IDhweCAzNXB4OyB9IH1cblxuLm5ld3NsZXR0ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTNiM2JiO1xuICBtaW4taGVpZ2h0OiAxNTBweDtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IH1cbiAgLm5ld3NsZXR0ZXIgaDMge1xuICAgIGNvbG9yOiAjRkZGRkZGO1xuICAgIGZvbnQtc2l6ZTogMi41ZW07IH1cbiAgICBAbWVkaWEgKG1heC13aWR0aDogNjQwcHgpIHtcbiAgICAgIC5uZXdzbGV0dGVyIGgzIHtcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyOyB9IH1cbiAgLm5ld3NsZXR0ZXIgaW5wdXQge1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICNGRkZGRkY7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzEzYjNiYjtcbiAgICBoZWlnaHQ6IDNlbTsgfVxuICAubmV3c2xldHRlciBidXR0b24ge1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgY29sb3I6ICNGRkZGRkY7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzAwMDAwMDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgYm9yZGVyOiBub25lO1xuICAgIHBhZGRpbmc6IDAuNWVtIDFlbTtcbiAgICBoZWlnaHQ6IDNlbTsgfVxuXG5mb290ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMGYwZjBmO1xuICBtaW4taGVpZ2h0OiAzMDBweDsgfVxuICBmb290ZXIgLmFkb3JuaW5nLWxvZ28gaDIge1xuICAgIGZvbnQtZmFtaWx5OiAnVWJ1bnR1Jywgc2Fucy1zZXJpZjtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgZm9udC1zaXplOiAyMHB4O1xuICAgIGZvbnQtd2VpZ2h0OiAzMDA7XG4gICAgbGluZS1oZWlnaHQ6IDE7XG4gICAgcGFkZGluZzogMCAuNjdlbTtcbiAgICB0cmFuc2l0aW9uOiBmb250LXNpemUgMC41cztcbiAgICAvKm5hanBpZXJ3IG1lZGlhIHBvbml6ZWogNjAwcHgsIHdzenlzdGtvIHcgbG9nbyBqZXN0IG5hIGplZG5vc3RrYWNoIGVtIHdpZWMgd3lzdGFyY3p5IHptaWVuaWFjIGZvbnQtc2l6ZSB1IGdsb3duZWdvIHJvZHppY2EgKi9cbiAgICAvKm1lZGlhIHBvd3l6ZWogNzY4cHgqLyB9XG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDYwMHB4KSB7XG4gICAgICBmb290ZXIgLmFkb3JuaW5nLWxvZ28gaDIge1xuICAgICAgICBmb250LXNpemU6IDM2cHg7IH0gfVxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA0ODBweCkge1xuICAgICAgZm9vdGVyIC5hZG9ybmluZy1sb2dvIGgyIHtcbiAgICAgICAgZm9udC1zaXplOiAzMnB4OyB9IH1cbiAgICBAbWVkaWEgKG1heC13aWR0aDogMzgwcHgpIHtcbiAgICAgIGZvb3RlciAuYWRvcm5pbmctbG9nbyBoMiB7XG4gICAgICAgIGZvbnQtc2l6ZTogMjhweDsgfSB9XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gICAgICBmb290ZXIgLmFkb3JuaW5nLWxvZ28gaDIge1xuICAgICAgICBmb250LXNpemU6IDQ3cHg7IH0gfVxuICAgIEBtZWRpYSAobWluLXdpZHRoOiAxMjAwcHgpIHtcbiAgICAgIGZvb3RlciAuYWRvcm5pbmctbG9nbyBoMiB7XG4gICAgICAgIGZvbnQtc2l6ZTogNTRweDsgfSB9XG4gICAgZm9vdGVyIC5hZG9ybmluZy1sb2dvIGgyOjpiZWZvcmUge1xuICAgICAgY29udGVudDogXCJcIjtcbiAgICAgIHdpZHRoOiAuNTVlbTtcbiAgICAgIGhlaWdodDogMWVtO1xuICAgICAgYm9yZGVyOiAzcHggc29saWQgIzI0ZjRmZjtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIHRvcDogMC4xNWVtO1xuICAgICAgbGVmdDogMDsgfVxuICAgICAgQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gICAgICAgIGZvb3RlciAuYWRvcm5pbmctbG9nbyBoMjo6YmVmb3JlIHtcbiAgICAgICAgICBib3JkZXI6IDVweCBzb2xpZCAjMjRmNGZmOyB9IH1cbiAgICBmb290ZXIgLmFkb3JuaW5nLWxvZ28gaDIgYSB7XG4gICAgICBmb250LWZhbWlseTogJ1VidW50dScsIHNhbnMtc2VyaWY7IH1cbiAgICBmb290ZXIgLmFkb3JuaW5nLWxvZ28gaDIgc3BhbiB7XG4gICAgICBmb250LWZhbWlseTogJ1VidW50dScsIHNhbnMtc2VyaWY7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIGZvbnQtc2l6ZTogLjNlbTtcbiAgICAgIGxpbmUtaGVpZ2h0OiAwLjE7XG4gICAgICBjb2xvcjogIzI0ZjRmZjtcbiAgICAgIC8qemVieSBzcGFuIG5pZSBuYWNob2R6aWwgbmEgYSBwcnp5IG5ham1uaWVqc3p5Y2ggd3ltaWFyYWNoKi8gfVxuICAgICAgQG1lZGlhIChtYXgtd2lkdGg6IDQ4MHB4KSB7XG4gICAgICAgIGZvb3RlciAuYWRvcm5pbmctbG9nbyBoMiBzcGFuIHtcbiAgICAgICAgICBsaW5lLWhlaWdodDogMC4zOyB9IH1cbiAgICAgIEBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAgICAgICBmb290ZXIgLmFkb3JuaW5nLWxvZ28gaDIgc3BhbiB7XG4gICAgICAgICAgbGluZS1oZWlnaHQ6IDAuMjsgfSB9XG4gIGZvb3RlciAuZm9vdGVyIGRpdjpudGgtb2YtdHlwZSgyKSB7XG4gICAgY29sb3I6ICNGRkZGRkY7IH1cbiAgICBmb290ZXIgLmZvb3RlciBkaXY6bnRoLW9mLXR5cGUoMikgc3BhbiB7XG4gICAgICBmb250LXNpemU6IDNlbTsgfVxuICBmb290ZXIgLmZvb3RlciBkaXY6bnRoLW9mLXR5cGUoMykgdWwge1xuICAgIGxpc3Qtc3R5bGU6IG5vbmU7IH1cbiAgICBmb290ZXIgLmZvb3RlciBkaXY6bnRoLW9mLXR5cGUoMykgdWwgbGkgYSB7XG4gICAgICBjb2xvcjogI0ZGRkZGRjtcbiAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7IH1cbiAgZm9vdGVyIC5mb290ZXIgLmZvb3Rlcl9ib3hlcyB7XG4gICAgYm9yZGVyOiAxcHggc29saWQgcmVkO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC13cmFwOiB3cmFwO1xuICAgIHdpZHRoOiAyNSU7IH1cbiAgICBAbWVkaWEgKG1heC13aWR0aDogNDgwcHgpIHtcbiAgICAgIGZvb3RlciAuZm9vdGVyIC5mb290ZXJfYm94ZXMge1xuICAgICAgICB3aWR0aDogMTAwJTsgfSB9XG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDk5MXB4KSB7XG4gICAgICBmb290ZXIgLmZvb3RlciAuZm9vdGVyX2JveGVzIHtcbiAgICAgICAgd2lkdGg6IDUwJTsgfSB9XG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDEwMjRweCkge1xuICAgICAgZm9vdGVyIC5mb290ZXIgLmZvb3Rlcl9ib3hlcyB7XG4gICAgICAgIHdpZHRoOiAyNSU7IH0gfVxuICAgIGZvb3RlciAuZm9vdGVyIC5mb290ZXJfYm94ZXMgZGl2IHtcbiAgICAgIHdpZHRoOiA1MCU7IH1cbiAgICAgIGZvb3RlciAuZm9vdGVyIC5mb290ZXJfYm94ZXMgZGl2IGltZyB7XG4gICAgICAgIG1heC13aWR0aDogMTAwJTtcbiAgICAgICAgaGVpZ2h0OiBhdXRvOyB9XG5cbi5ldmVudHMge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZGRkZGO1xuICBib3JkZXI6IDFweCBkb3R0ZWQgZ3JlZW47XG4gIG1pbi1oZWlnaHQ6IDMwMHB4OyB9XG4gIC5ldmVudHMgaDMge1xuICAgIGNvbG9yOiAjMDAwOyB9XG4gIC5ldmVudHMgcCB7XG4gICAgY29sb3I6ICMwMDA7IH1cbiAgLmV2ZW50cyAuY29udGFpbmVyIHtcbiAgICBib3JkZXI6IDFweCBzb2xpZCBibHVlOyB9XG4gICAgLmV2ZW50cyAuY29udGFpbmVyIC5ldmVudF90YWJsZSB7XG4gICAgICBib3JkZXI6IDFweCBzb2xpZCByZWQ7IH1cbiAgICAgIC5ldmVudHMgLmNvbnRhaW5lciAuZXZlbnRfdGFibGUgZGl2IHtcbiAgICAgICAgYm9yZGVyOiAxcHggZG90dGVkIGRlZXBwaW5rOyB9XG4gIC5ldmVudHMgLmV2ZW50X2JveCB7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vaW1hZ2VzLzguanBnXCIpO1xuICAgIG1pbi1oZWlnaHQ6IDQwMHB4O1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBwYWRkaW5nOiAzZW07IH1cbiAgICAuZXZlbnRzIC5ldmVudF9ib3ggPiBkaXYge1xuICAgICAgYmFja2dyb3VuZDogcmdiYSg5LCAyNDMsIDI1NSwgMC40NSk7XG4gICAgICBoZWlnaHQ6IDMwNXB4O1xuICAgICAgcGFkZGluZzogMmVtO1xuICAgICAgdGV4dC1hbGlnbjogY2VudGVyOyB9XG4gICAgICAuZXZlbnRzIC5ldmVudF9ib3ggPiBkaXYgaDIge1xuICAgICAgICB0ZXh0LXRyYW5zZm9ybTogY2FwaXRhbGl6ZTtcbiAgICAgICAgY29sb3I6ICNGRkZGRkY7XG4gICAgICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjRkZGRkZGO1xuICAgICAgICBmb250LXNpemU6IDJlbTsgfVxuICAgICAgLmV2ZW50cyAuZXZlbnRfYm94ID4gZGl2IGgzIHtcbiAgICAgICAgY29sb3I6ICNGRkZGRkY7XG4gICAgICAgIGxldHRlci1zcGFjaW5nOiAzMHB4O1xuICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgICAgICBmb250LXNpemU6IDRlbTtcbiAgICAgICAgbWFyZ2luLXRvcDogLjVlbTsgfVxuXG4udG1wLXNlY3Rpb24ge1xuICBtaW4taGVpZ2h0OiAzMDBweDsgfVxuICAudG1wLXNlY3Rpb246bnRoLW9mLXR5cGUoMm4pIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjOTk5OTk5OyB9XG4iLCJib2R5e1xuXG4gICp7XG4gICAgcGFkZGluZzogMDtcbiAgICBtYXJnaW46IDA7XG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgZm9udC1mYW1pbHk6ICdPcGVuIFNhbnMnLCBzYW5zLXNlcmlmO1xuICAgIGNvbG9yOiB3aGl0ZTtcblxuICAgICY6aG92ZXIsJjphY3RpdmUsICY6Zm9jdXN7XG4gICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgICBvdXRsaW5lOiBub25lO1xuICAgICAgY29sb3I6IHdoaXRlO1xuICAgIH1cbiAgfVxufVxuIiwiLypwcnp5Y2lzayB3eXN1d2FqYWN5IG5hdmJhciBuaWUgamVzdCBjemVzY2lhIG5hdmJhcnUgdyBzdHJ1a3R1cnplIGh0bWwgLSBkbyBkb3Bpc2FuaWEgdyBnbG93bnltIHN6a2llbGVjaWUgc3Ryb255IHBsdXMgb2JzbHVnYSB3IEpTKG1vemxpd2UgemUgZGEgc2llIGJleiBKUykqL1xuXG4lZXhwYW5kaW5nLWxpbmVze1xuICBjb250ZW50OiAnJztcbiAgZGlzcGxheTogYmxvY2s7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDJweDtcbiAgYmFja2dyb3VuZDogd2hpdGU7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogMDtcbiAgdHJhbnNmb3JtOiBzY2FsZVgoMCk7XG59XG5cbi5uYXYtYmFye1xuICBkaXNwbGF5OiBibG9jaztcbiAgaGVpZ2h0OiAxMDVweDtcbiAgd2lkdGg6IDEwMCU7XG4gIGJhY2tncm91bmQ6ICRwcmltYXJ5LWNvbG9yO1xuICBmb250LXNpemU6IDE0cHg7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgei1pbmRleDogMjtcbiAgdG9wOi01MCU7XG4gIHRyYW5zaXRpb246IGFsbCAwLjVzIGN1YmljLWJlemllcigwLjE3NSwgMC44ODUsIDAuMzIsIDEuMSk7XG5cblxuXG5cbiAgJi5uYXYtYmFyLXNob3due1xuICAgIHRvcDowO1xuICB9XG5cbiAgQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgaGVpZ2h0OiBhdXRvO1xuICAgIHRyYW5zaXRpb246IGFsbCAwLjNzIGN1YmljLWJlemllcigwLjE3NSwgMC44ODUsIDAuMzIsIDEuMjc1KTtcbiAgfVxuXG4gIHVse1xuICAgIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgbWF4LXdpZHRoOiA3MzBweDtcbiAgICBtYXJnaW46IDAgYXV0bztcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgZmxleC1mbG93OiByb3cgd3JhcDtcblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxMTAwcHgpIHtcbiAgICAgIG1heC13aWR0aDogNjUwcHg7XG4gICAgfVxuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDk0MHB4KSB7XG4gICAgICBtYXgtd2lkdGg6IDU2MHB4O1xuICAgIH1cblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgICAgd2lkdGg6IGNhbGMoNzAlIC0gNTBweCk7IC8vdGUgNDBweCB0byBtaWVqc2NlIG5hIG5hdi1iYXItYnV0dG9uXG4gICAgICBwYWRkaW5nLXRvcDogMi4yZW07XG4gICAgICBwYWRkaW5nLWJvdHRvbTogMi4yZW07XG4gICAgfVxuXG4gICAgbGl7XG5cbiAgICAgICY6bm90KDpudGgtY2hpbGQoMSkpe1xuICAgICAgICBtYXJnaW4tbGVmdDogMzVweDtcblxuICAgICAgICBAbWVkaWEgKG1heC13aWR0aDogMTEwMHB4KSB7XG4gICAgICAgICAgbWFyZ2luLWxlZnQ6IDA7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgICAgIHdpZHRoOjEwMCU7XG4gICAgICAgIG1hcmdpbjogMCAhaW1wb3J0YW50O1xuICAgICAgICBwYWRkaW5nOiA1cHggMDtcbiAgICAgIH1cblxuICAgICAgYXtcbiAgICAgICAgY29sb3I6ICMzMzMzMzM7XG4gICAgICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICAgICAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICAgICAgbGV0dGVyLXNwYWNpbmc6IDJweDtcbiAgICAgICAgcGFkZGluZzogMC41ZW07XG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgdHJhbnNpdGlvbjogY29sb3IgLjVzO1xuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cbiAgICAgICAgQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgICAgICB9XG5cbiAgICAgICAgJjo6YmVmb3Jle1xuICAgICAgICAgIEBleHRlbmQgJWV4cGFuZGluZy1saW5lcztcbiAgICAgICAgICB0b3A6MDtcbiAgICAgICAgfVxuXG4gICAgICAgICY6OmFmdGVye1xuICAgICAgICAgIEBleHRlbmQgJWV4cGFuZGluZy1saW5lcztcbiAgICAgICAgICBib3R0b206IDA7XG4gICAgICAgIH1cblxuICAgICAgICAvKmtsYXNhIHogYWt0eXduYSBzdHJvbmEgdyBuYXZiYXJ6ZSAtIG9ic2x1Z2EgZG8gZG9waXNhbmlhIHcgSlMqL1xuICAgICAgICAmLmFjdGl2ZS1uYXYtbGlua3tcbiAgICAgICAgICBjb2xvcjogd2hpdGU7XG4gICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuXG4gICAgICAgICAgJjo6YmVmb3JlLCAmOjphZnRlcntcbiAgICAgICAgICAgIHRyYW5zZm9ybTogc2NhbGVYKDEpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgICY6Zm9jdXN7XG4gICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgICAgICAgIGNvbG9yOiAjMzMzMzMzO1xuICAgICAgICB9XG5cbiAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgY29sb3I6IHdoaXRlO1xuICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcblxuICAgICAgICAgICY6OmJlZm9yZSwgJjo6YWZ0ZXJ7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHNjYWxlWCgxKTtcbiAgICAgICAgICAgIHRyYW5zZm9ybS1vcmlnaW46IDAgNTAlO1xuICAgICAgICAgICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuNHNcbiAgICAgICAgICB9XG5cbiAgICAgICAgICAmOjphZnRlcntcbiAgICAgICAgICAgIHRyYW5zZm9ybS1vcmlnaW46IDEwMCUgNTAlO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxufSIsIiRwcmltYXJ5LWNvbG9yOiAjMTNiM2JiO1xuJHNlY29uZGFyeS1jb2xvcjogIzI0ZjRmZjsiLCJidXR0b24ubmF2LWJhci1idXR0b257XG4gIGJhY2tncm91bmQ6IHJnYmEoMCwgMCwgMCwgMC40KTtcbiAgd2lkdGg6NTBweDtcbiAgaGVpZ2h0OjQwcHg7XG4gIGJvcmRlcjogbm9uZTtcbiAgcG9zaXRpb246IGZpeGVkO1xuICByaWdodDogMTUlO1xuICB0b3A6IDQlO1xuICB6LWluZGV4OiAzO1xuXG4gIEBtZWRpYShtYXgtd2lkdGg6MTMwMHB4KXtcbiAgICByaWdodDogMTAlO1xuICB9XG5cbiAgQG1lZGlhKG1heC13aWR0aDo4MDBweCl7XG4gICAgcmlnaHQ6IDEwJTtcbiAgfVxuXG4gIC5idXR0b24tZGl2LWxpbmV7XG4gICAgaGVpZ2h0OiAycHg7XG4gICAgd2lkdGg6IDM1cHg7XG4gICAgYmFja2dyb3VuZDogI2ZmZjtcbiAgICBtYXJnaW46IDVweCBhdXRvO1xuICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjNzLCBvcGFjaXR5IDAuM3MsIGJhY2tncm91bmQgMC4zcztcblxuICB9XG5cbiAgJi5hY3RpdmUtbmF2LWJhci1idXR0b257IC8vbGVwaWVqIHd5Z2xhZGFsYnkgbmEgbWFyZ2luZWFjaCBuaXogcG9zaXRpb246IGFic29sdXRlIHByenkgdW50bG9nZ2xvd2FuaXUsIC5iYW5uZXItbGlzdCBuYSBjaHdpbGUgc2llIHJvem1henVqZSBwcnp5IGtsaWtuaWVjaXUgdGVnbyBwcnp5Y2lza3UtIHBvd29kIG5pZXpuYW55XG5cbiAgICAuYnV0dG9uLWRpdi1saW5le1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgbWFyZ2luOiAwO1xuICAgICAgdG9wOjE5cHg7XG4gICAgICBsZWZ0OiA2LjVweDsgLy90ZW9yZXR5Y3puaWUgcG93aW5ubyB0dSBieWMgNy41cHggemVieSBieWx5IHBvc3JvZGt1IGFsZSByb3RhdGUgd3lkYWplIHNpZSBsZWtrbyBwcnplbm9zaWMgamUgdyBwcmF3b1xuICAgICAgYmFja2dyb3VuZDogIzMzMztcblxuICAgICAgJjpudGgtb2YtdHlwZSgxKXtcbiAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpO1xuXG4gICAgICB9XG5cbiAgICAgICY6bnRoLW9mLXR5cGUoMil7XG4gICAgICAgIHRyYW5zZm9ybTogcm90YXRlKC00NWRlZyk7XG4gICAgICB9XG5cbiAgICAgICY6bnRoLW9mLXR5cGUoMyl7XG4gICAgICAgIGJvdHRvbToxMnB4O1xuICAgICAgICBsZWZ0OiA3LjVweDtcbiAgICAgICAgb3BhY2l0eTogMDtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn0iLCIuYWRvcm5pbmctbG9nb3tcblxuICBoMntcbiAgICBmb250LWZhbWlseTogJ1VidW50dScsIHNhbnMtc2VyaWY7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGZvbnQtc2l6ZTogNDBweDtcbiAgICBmb250LXdlaWdodDogMzAwO1xuICAgIGxpbmUtaGVpZ2h0OiAxO1xuICAgIHBhZGRpbmc6IDAgLjY3ZW07XG4gICAgdHJhbnNpdGlvbjogZm9udC1zaXplIDAuNXMgO1xuXG4gICAgLypuYWpwaWVydyBtZWRpYSBwb25pemVqIDYwMHB4LCB3c3p5c3RrbyB3IGxvZ28gamVzdCBuYSBqZWRub3N0a2FjaCBlbSB3aWVjIHd5c3RhcmN6eSB6bWllbmlhYyBmb250LXNpemUgdSBnbG93bmVnbyByb2R6aWNhICovXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDYwMHB4KXtcbiAgICAgIGZvbnQtc2l6ZTogMzZweDtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogNDgwcHgpe1xuICAgICAgZm9udC1zaXplOiAzMnB4O1xuICAgIH1cblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAzODBweCl7XG4gICAgICBmb250LXNpemU6IDI4cHg7XG4gICAgfVxuXG4gICAgLyptZWRpYSBwb3d5emVqIDc2OHB4Ki9cbiAgICBAbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpe1xuICAgICAgZm9udC1zaXplOiA0N3B4O1xuICAgIH1cblxuICAgIEBtZWRpYSAobWluLXdpZHRoOiAxMjAwcHgpe1xuICAgICAgZm9udC1zaXplOiA1NHB4O1xuICAgIH1cblxuICAgICY6OmJlZm9yZXtcbiAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICB3aWR0aDogLjU1ZW07XG4gICAgICBoZWlnaHQ6MWVtO1xuICAgICAgYm9yZGVyOiAzcHggc29saWQgJHNlY29uZGFyeS1jb2xvcjtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIHRvcDowLjE1ZW07XG4gICAgICBsZWZ0OjA7XG5cbiAgICAgIEBtZWRpYSAobWluLXdpZHRoOiA3NjhweCl7XG4gICAgICAgIGJvcmRlcjogNXB4IHNvbGlkICRzZWNvbmRhcnktY29sb3I7XG4gICAgICB9XG4gICAgfVxuXG4gICAgYXtcbiAgICAgIGZvbnQtZmFtaWx5OiAnVWJ1bnR1Jywgc2Fucy1zZXJpZjtcbiAgICB9XG5cbiAgICBzcGFue1xuICAgICAgZm9udC1mYW1pbHk6ICdVYnVudHUnLCBzYW5zLXNlcmlmO1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICBmb250LXNpemU6IC4zZW07XG4gICAgICBsaW5lLWhlaWdodDogMC4xO1xuICAgICAgY29sb3I6ICRzZWNvbmRhcnktY29sb3I7XG5cbiAgICAgIC8qemVieSBzcGFuIG5pZSBuYWNob2R6aWwgbmEgYSBwcnp5IG5ham1uaWVqc3p5Y2ggd3ltaWFyYWNoKi9cbiAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiA0ODBweCl7XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAwLjM7XG4gICAgICB9XG5cbiAgICAgIEBtZWRpYSAobWluLXdpZHRoOiA3NjhweCl7XG4gICAgICAgIGxpbmUtaGVpZ2h0OjAuMjtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn0iLCJzZWN0aW9uLmJhbm5lciB7XG4gIGJhY2tncm91bmQ6IHVybChcIi4uL2ltYWdlcy9iYW5uZXIuanBnXCIpIG5vLXJlcGVhdCB0b3AgY2VudGVyO1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cblxuICBAbWVkaWEobWF4LXdpZHRoOiA1MDBweCApe1xuICAgIG1pbi1oZWlnaHQ6IDQwMHB4O1xuICB9XG5cbiAgLyptaW4taGVpZ2h0IGRsYSBiYW5uZXJhIHBvendhbGEgc2thbG93YWMgc2llIHTFgnUqL1xuICAkYmFubmVyLW1pbi13aWR0aDogMzAwcHg7XG4gIEBmb3IgJGkgZnJvbSAxIHRocm91Z2ggMTAge1xuICAgIEBtZWRpYSAobWluLXdpZHRoOiRiYW5uZXItbWluLXdpZHRoKXtcbiAgICAgIEBpZiAkaSA9PSAxMCB7XG4gICAgICAgIG1pbi1oZWlnaHQ6IDIvMyAqICRiYW5uZXItbWluLXdpZHRoIC0gMzA7XG4gICAgICB9IEBlbHNlIGlmICRpIDwgNSB7XG4gICAgICAgIG1pbi1oZWlnaHQ6IDUvNiAqICRiYW5uZXItbWluLXdpZHRoO1xuICAgICAgICAkYmFubmVyLW1pbi13aWR0aDogJGJhbm5lci1taW4td2lkdGggKyAxMDA7XG4gICAgICB9IEBlbHNlIHtcbiAgICAgIG1pbi1oZWlnaHQ6IDIvMyAqICRiYW5uZXItbWluLXdpZHRoO1xuICAgICAgJGJhbm5lci1taW4td2lkdGg6ICRiYW5uZXItbWluLXdpZHRoICsgMTAwO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIC5jb250YWluZXJ7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgbWF4LXdpZHRoOiAxMjAwcHg7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gICAgcGFkZGluZy10b3A6IDE4cHg7XG5cblxuICAgIGhlYWRlcntcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIH1cbiAgfVxuXG4gIC5iYW5uZXItbGlzdC1jb250YWluZXJ7XG4gICAgQG1lZGlhKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgICAgIHRyYW5zZm9ybTogcm90YXRlKC05MGRlZyk7XG4gICAgfVxuICB9XG5cbiAgLmJhbm5lci1saXN0e1xuICAgIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgbWFyZ2luLXRvcDogMTIuNSU7XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogNjMwcHgpe1xuICAgICAgbWFyZ2luLXRvcDogMjAlO1xuICAgIH1cblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAyOTBweCl7XG4gICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIH1cblxuICAgIEBtZWRpYSAobWluLXdpZHRoOiA3NjhweCl7XG4gICAgICAvL3RyYW5zZm9ybTogcm90YXRlKDE4MGRlZyk7XG4gICAgICBtYXJnaW4tdG9wOiAtMjUlO1xuICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICByaWdodDogMTEwJTtcbiAgICAgIHdpZHRoOiAyMDAlO1xuICAgICAgLy90ZXh0LWFsaWduOiBjZW50ZXI7XG5cbiAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiA5OTBweCl7XG4gICAgICAgIHdpZHRoOiAyMzAlO1xuICAgICAgICByaWdodDogOTAlO1xuICAgICAgfVxuXG4gICAgICBAbWVkaWEgKG1heC13aWR0aDogODY1cHgpe1xuICAgICAgICB3aWR0aDogMjYwJTtcbiAgICAgICAgcmlnaHQ6IDcwJTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBsaXtcbiAgICAgIG1hcmdpbjogMCAzJTtcbiAgICAgIGxldHRlci1zcGFjaW5nOiAycHg7XG4gICAgICBmb250LXNpemU6IDEzcHg7XG4gICAgICBmb250LXdlaWdodDogNjAwO1xuXG4gICAgICBAbWVkaWEgKG1heC13aWR0aDogNDMwcHgpe1xuICAgICAgICBmb250LXNpemU6IDEwcHg7XG5cbiAgICAgIH1cblxuICAgICAgQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KXtcbiAgICAgICAgZm9udC1zaXplOiAxNHB4O1xuXG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLmJhbm5lci1pbmZvIHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG5cblxuICAgIEBtZWRpYShtaW4td2lkdGg6IDc2OHB4KXtcbiAgICAgIG1hcmdpbi10b3A6IDMxLjUlO1xuICAgIH1cblxuICAgIGgxe1xuICAgICAgZm9udC1zaXplOiA3Ljd2dztcbiAgICAgIGxpbmUtaGVpZ2h0OiAxLjE7XG5cbiAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiA0MzBweCl7XG4gICAgICAgIGZvbnQtc2l6ZTogMzNweDtcbiAgICAgIH1cblxuICAgICAgQG1lZGlhIChtaW4td2lkdGg6IDcxMHB4KXtcbiAgICAgICAgZm9udC1zaXplOiA1NXB4O1xuICAgICAgfVxuXG4gICAgICBAbWVkaWEgKG1pbi13aWR0aDogODgwcHgpe1xuICAgICAgICBmb250LXNpemU6IDY0cHg7XG4gICAgICB9XG5cbiAgICAgIEBtZWRpYSAobWluLXdpZHRoOiAxMjAwcHgpe1xuICAgICAgICBmb250LXNpemU6IDczcHg7XG4gICAgICB9XG5cbiAgICAgIHN0cm9uZ3tcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgICAgIGZvbnQtZmFtaWx5OiAnVWJ1bnR1Jywgc2Fucy1zZXJpZjtcbiAgICAgICAgZm9udC13ZWlnaHQ6IDYwMDtcblxuICAgICAgfVxuXG4gICAgICBwe1xuICAgICAgICBmb250LWZhbWlseTogJ1VidW50dScsIHNhbnMtc2VyaWY7XG4gICAgICAgIGZvbnQtc2l6ZTogLjMzZW07XG4gICAgICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcbiAgICAgICAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgICAgICAgbGV0dGVyLXNwYWNpbmc6IDJweDtcblxuXG4gICAgICAgICRiYW5uZXItcC1mb250LXNpemU6MTRweDtcbiAgICAgICAgQGZvciAkaSBmcm9tIDEgdGhyb3VnaCA2IHtcbiAgICAgICAgICBAbWVkaWEgKG1pbi13aWR0aDo1MDBweCArICgkaSAqIDEwMCkpe1xuICAgICAgICAgICAgQGlmICRpID09IDIgb3IgJGkgPT0gMyB7XG4gICAgICAgICAgICAgIGZvbnQtc2l6ZTogJGJhbm5lci1wLWZvbnQtc2l6ZSArICRpIC0gMC41O1xuICAgICAgICAgICAgfUBlbHNlIHtcbiAgICAgICAgICAgICAgZm9udC1zaXplOiAkYmFubmVyLXAtZm9udC1zaXplICsgJGk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgJj5we1xuICAgICAgd2lkdGg6IDkwJTtcbiAgICAgIG1hcmdpbjogMi44ZW0gYXV0bztcbiAgICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICAgIGxpbmUtaGVpZ2h0OiAxLjhlbTtcblxuICAgICAgQG1lZGlhIChtYXgtd2lkdGg6IDYyNXB4KXtcbiAgICAgICAgbWFyZ2luOiAxLjVlbSBhdXRvO1xuICAgICAgICBmb250LXNpemU6IDEzcHg7XG4gICAgICAgIHdpZHRoOiA4NSU7XG4gICAgICB9XG5cbiAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiA1NTBweCl7XG4gICAgICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICAgICAgd2lkdGg6IDkwJTtcbiAgICAgIH1cblxuICAgICAgQG1lZGlhIChtYXgtd2lkdGg6IDQ4NXB4KXtcbiAgICAgICAgd2lkdGg6IDk1JTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICA+YXtcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgIG1hcmdpbjoydncgYXV0byA2MHB4IGF1dG87XG4gICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgICAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgICAgIGxldHRlci1zcGFjaW5nOiAycHg7XG4gICAgICBwYWRkaW5nOiAxMHB4IDQwcHg7XG4gICAgICBiYWNrZ3JvdW5kOiAkc2Vjb25kYXJ5LWNvbG9yO1xuICAgICAgYm9yZGVyOiAycHggc29saWQgI2ZmZjsgLy9tdXN6YSBieWMgY28gbmFqbW5pZWogMiBweCAtIHByenkgem1uaWVqc3phbml1IHdpZGFjIHppZWxvbmEgcG9zd2lhdGUgdGxhPz9cbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgIG92ZXJmbG93OiBoaWRkZW47XG5cbiAgICAgIHNwYW57XG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgdHJhbnNpdGlvbjogY29sb3IgMC41cztcbiAgICAgIH1cblxuXG4gICAgICAmOjpiZWZvcmV7XG4gICAgICAgIGNvbnRlbnQ6ICcnO1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICBsZWZ0OiBjYWxjKDUwJSAtIDIwMHB4KTtcbiAgICAgICAgdG9wOmNhbGMoNTAlIC0gNTBweCk7XG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgICAgICAgd2lkdGg6NDAwcHg7XG4gICAgICAgIGhlaWdodDoxMDBweDtcbiAgICAgICAgYmFja2dyb3VuZDogIzQ5NDg0ODtcbiAgICAgICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuNXM7XG5cbiAgICAgIH1cblxuICAgICAgJjpob3ZlcntcblxuICAgICAgICBzcGFue1xuICAgICAgICAgIGNvbG9yOiAjMzMzO1xuICAgICAgICB9XG5cbiAgICAgICAgJjo6YmVmb3Jle1xuICAgICAgICAgIGJhY2tncm91bmQ6ICM0OTQ4NDg7XG4gICAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgwLjAwMSk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgQG1lZGlhIChtYXgtd2lkdGg6IDQ3MHB4KXtcbiAgICAgICAgZm9udC1zaXplOiAxMHB4O1xuICAgICAgICBwYWRkaW5nOiA4cHggMzVweDtcbiAgICAgIH1cblxuICAgICAgLy9AbWVkaWEgKG1pbi13aWR0aDogNjUwcHgpe1xuICAgICAgLy8gIGJvcmRlcjogMnB4IHNvbGlkICNmZmY7O1xuICAgICAgLy99XG4gICAgfVxuICB9XG5cbn1cblxuXG5cbiIsIlxuLm5ld3NsZXR0ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAkcHJpbWFyeS1jb2xvcjtcbiAgbWluLWhlaWdodDogMTUwcHg7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuXG4gIGgzIHtcbiAgICBjb2xvcjogI0ZGRkZGRjtcbiAgICBmb250LXNpemU6IDIuNWVtO1xuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDY0MHB4KXtcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICB9XG4gIH1cbiAgaW5wdXQge1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICNGRkZGRkY7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHByaW1hcnktY29sb3I7XG4gICAgaGVpZ2h0OiAzZW07XG4gIH1cbiAgYnV0dG9uIHtcblxuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgY29sb3I6ICNGRkZGRkY7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzAwMDAwMDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgYm9yZGVyOiBub25lO1xuICAgIHBhZGRpbmc6IDAuNWVtIDFlbTtcbiAgICBoZWlnaHQ6IDNlbTtcblxuICB9XG59XG5cblxuXG5mb290ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMGYwZjBmO1xuICBtaW4taGVpZ2h0OiAzMDBweDtcblxuICAuYWRvcm5pbmctbG9nbyB7XG5cbiAgICBoMiB7XG4gICAgICBmb250LWZhbWlseTogJ1VidW50dScsIHNhbnMtc2VyaWY7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICBmb250LXNpemU6IDIwcHg7XG4gICAgICBmb250LXdlaWdodDogMzAwO1xuICAgICAgbGluZS1oZWlnaHQ6IDE7XG4gICAgICBwYWRkaW5nOiAwIC42N2VtO1xuICAgICAgdHJhbnNpdGlvbjogZm9udC1zaXplIDAuNXM7XG5cbiAgICAgIC8qbmFqcGllcncgbWVkaWEgcG9uaXplaiA2MDBweCwgd3N6eXN0a28gdyBsb2dvIGplc3QgbmEgamVkbm9zdGthY2ggZW0gd2llYyB3eXN0YXJjenkgem1pZW5pYWMgZm9udC1zaXplIHUgZ2xvd25lZ28gcm9kemljYSAqL1xuICAgICAgQG1lZGlhIChtYXgtd2lkdGg6IDYwMHB4KSB7XG4gICAgICAgIGZvbnQtc2l6ZTogMzZweDtcbiAgICAgIH1cblxuICAgICAgQG1lZGlhIChtYXgtd2lkdGg6IDQ4MHB4KSB7XG4gICAgICAgIGZvbnQtc2l6ZTogMzJweDtcbiAgICAgIH1cblxuICAgICAgQG1lZGlhIChtYXgtd2lkdGg6IDM4MHB4KSB7XG4gICAgICAgIGZvbnQtc2l6ZTogMjhweDtcbiAgICAgIH1cblxuICAgICAgLyptZWRpYSBwb3d5emVqIDc2OHB4Ki9cbiAgICAgIEBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAgICAgICBmb250LXNpemU6IDQ3cHg7XG4gICAgICB9XG5cbiAgICAgIEBtZWRpYSAobWluLXdpZHRoOiAxMjAwcHgpIHtcbiAgICAgICAgZm9udC1zaXplOiA1NHB4O1xuICAgICAgfVxuXG4gICAgICAmOjpiZWZvcmUge1xuICAgICAgICBjb250ZW50OiBcIlwiO1xuICAgICAgICB3aWR0aDogLjU1ZW07XG4gICAgICAgIGhlaWdodDogMWVtO1xuICAgICAgICBib3JkZXI6IDNweCBzb2xpZCAkc2Vjb25kYXJ5LWNvbG9yO1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIHRvcDogMC4xNWVtO1xuICAgICAgICBsZWZ0OiAwO1xuXG4gICAgICAgIEBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAgICAgICAgIGJvcmRlcjogNXB4IHNvbGlkICRzZWNvbmRhcnktY29sb3I7XG4gICAgICAgIH1cblxuICAgICAgfVxuXG4gICAgICBhIHtcbiAgICAgICAgZm9udC1mYW1pbHk6ICdVYnVudHUnLCBzYW5zLXNlcmlmO1xuICAgICAgfVxuXG4gICAgICBzcGFuIHtcbiAgICAgICAgZm9udC1mYW1pbHk6ICdVYnVudHUnLCBzYW5zLXNlcmlmO1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgZm9udC1zaXplOiAuM2VtO1xuICAgICAgICBsaW5lLWhlaWdodDogMC4xO1xuICAgICAgICBjb2xvcjogJHNlY29uZGFyeS1jb2xvcjtcblxuICAgICAgICAvKnplYnkgc3BhbiBuaWUgbmFjaG9kemlsIG5hIGEgcHJ6eSBuYWptbmllanN6eWNoIHd5bWlhcmFjaCovXG4gICAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiA0ODBweCkge1xuICAgICAgICAgIGxpbmUtaGVpZ2h0OiAwLjM7XG4gICAgICAgIH1cblxuICAgICAgICBAbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgICAgICAgICBsaW5lLWhlaWdodDogMC4yO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG5cblxuICAgIC5mb290ZXIge1xuXG4gICAgICBkaXY6bnRoLW9mLXR5cGUoMikge1xuICAgICAgICBjb2xvcjogI0ZGRkZGRjtcblxuICAgICAgICBzcGFuIHtcbiAgICAgICAgICBmb250LXNpemU6IDNlbTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgZGl2Om50aC1vZi10eXBlKDMpIHtcbiAgICAgICAgdWwge1xuICAgICAgICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG4gICAgICAgICAgbGkge1xuICAgICAgICAgICAgYSB7XG4gICAgICAgICAgICAgIGNvbG9yOiAjRkZGRkZGO1xuICAgICAgICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgLmZvb3Rlcl9ib3hlcyB7XG4gICAgICAgIGJvcmRlcjogMXB4IHNvbGlkIHJlZDtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgZmxleC13cmFwOiB3cmFwO1xuICAgICAgICB3aWR0aDogMjUlO1xuXG4gICAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiA0ODBweCkge1xuICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICB9XG5cbiAgICAgICAgQG1lZGlhIChtYXgtd2lkdGg6IDk5MXB4KSB7XG4gICAgICAgICAgd2lkdGg6IDUwJTtcbiAgICAgICAgfVxuXG4gICAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxMDI0cHgpIHtcbiAgICAgICAgICB3aWR0aDogMjUlO1xuICAgICAgICB9XG5cbiAgICAgICAgZGl2IHtcbiAgICAgICAgICB3aWR0aDogNTAlO1xuICAgICAgICAgIGltZyB7XG4gICAgICAgICAgICBtYXgtd2lkdGg6IDEwMCU7XG4gICAgICAgICAgICBoZWlnaHQ6IGF1dG87XG4gICAgICAgICAgfVxuXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgfVxuXG5cblxuXG5cblxuIiwiLmV2ZW50cyB7XG4gIGgzIHtcbiAgICBjb2xvcjogIzAwMDtcbiAgfVxuXG4gIHAge1xuICAgIGNvbG9yOiAjMDAwO1xuICB9XG5cbiAgYmFja2dyb3VuZC1jb2xvcjogI0ZGRkZGRjtcbiAgYm9yZGVyOjFweCBkb3R0ZWQgZ3JlZW47XG4gIG1pbi1oZWlnaHQ6MzAwcHg7XG4gIC5jb250YWluZXIge1xuICAgIGJvcmRlcjoxcHggc29saWQgYmx1ZTtcbiAgICAuZXZlbnRfdGFibGUge1xuICAgICAgYm9yZGVyOjFweCBzb2xpZCByZWQ7XG4gICAgICBkaXYge1xuICAgICAgYm9yZGVyOiAxcHggZG90dGVkIGRlZXBwaW5rO1xuICAgIH1cbiAgICB9XG4gIH1cbiAgLmV2ZW50X2JveCB7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vaW1hZ2VzLzguanBnXCIpO1xuICAgIG1pbi1oZWlnaHQ6IDQwMHB4O1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBwYWRkaW5nOjNlbTtcbiAgICA+ZGl2IHtcbiAgICAgIGJhY2tncm91bmQ6IHJnYmEoOSwgMjQzLCAyNTUsIDAuNDUpO1xuICAgICAgaGVpZ2h0OjMwNXB4O1xuICAgICAgcGFkZGluZzoyZW07XG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICBoMiB7XG4gICAgICAgIHRleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplO1xuICAgICAgICBjb2xvcjogI0ZGRkZGRjtcbiAgICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNGRkZGRkY7XG4gICAgICAgIGZvbnQtc2l6ZTogMmVtO1xuICAgICAgfVxuICAgICAgaDMge1xuICAgICAgICBjb2xvcjogI0ZGRkZGRjtcbiAgICAgICAgbGV0dGVyLXNwYWNpbmc6IDMwcHg7XG4gICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgICAgIGZvbnQtc2l6ZTogNGVtO1xuICAgICAgICBtYXJnaW4tdG9wOiAuNWVtO1xuICAgICAgfVxuXG4gICAgfVxuICB9XG59IiwiQGltcG9ydCAncGFydGlhbHMvcmVzZXQnO1xuQGltcG9ydCAnbW9kdWxlcy92YXJpYWJsZXMnO1xuQGltcG9ydCAncGFydGlhbHMvbmF2YmFyJztcbkBpbXBvcnQgJ3BhcnRpYWxzL25hdi1iYXItYnV0dG9uJztcbkBpbXBvcnQgJ3BhcnRpYWxzL2Fkb3JuaW5nX2xvZ28nO1xuQGltcG9ydCAncGFydGlhbHMvYmFubmVyLXNlY3Rpb24nO1xuQGltcG9ydCAncGFydGlhbHMvZm9vdGVyJztcbkBpbXBvcnQgXCJwYXJ0aWFscy9ldmVudHMtc2VjdGlvblwiO1xuXG4udG1wLXNlY3Rpb24ge1xuICBtaW4taGVpZ2h0OiAzMDBweDtcbiAgJjpudGgtb2YtdHlwZSgybil7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzk5OTk5OTtcbiAgfVxufVxuIl19 */
=======
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
>>>>>>> 96de8b1edb46f3a781378d9522f0395acffbc187
